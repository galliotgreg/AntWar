States,Name,Type
0,INIT,Init
1,prey in sight,Inter
2,go to search,trigger{goto}
3,go to elsewhere,trigger{goto}
4,go to prey,trigger{goto}
5,strike,trigger{strike}
,,
Transitions,Start State,End State
0,INIT,prey in sight
1,INIT,go to search
2,INIT,go to elsewhere
3,prey in sight,go to prey
4,prey in sight,strike
,,
Syntax Tree,Output,
0,0,
Nodes,Type,Output (Node -> Input)
0,operator{B>SS},
1,param{const scal=0},0->0
2,operator{SsizeR[]},0->1
3,param{ref[]:enemies},2->0
,,
Syntax Tree,Output,
0,1,
Nodes,Type,Output (Node -> Input)
0,operator{B!=VV},
1,operator{VgetRT},0->0
2,param{ref:self},1->0
3,param{vec:targetpos},1->1
4,operator{VgetRT},0->1
5,param{ref:self},4->0
6,param{const txt=curPos},4->1
,,
,,
Syntax Tree,Output,
0,go to search->0,
Nodes,Type,Output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VgetRT},0->0
2,param{ref:self},1->0
3,param{vec:trgPos},1->1
,,
Syntax Tree,Output,
0,go to elsewhere->0,
Nodes,Type,Output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VrandCircleVS},0->0
2,param{const scal=5},1->1
3,operator{VgetRT},1->0
4,param{ref:self},3->0
5,param{const txt=curPos},3->1
,,
Syntax Tree,Output,
0,go to prey->0,
Nodes,Type,Output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VgetRT},0->0
2,param{const txt=pos},1->1
3,operator{RgetR[]S},1->0
4,param{ref[]:enemies},3->0
5,operator{SminIdS[]},3->1
6,operator{S[]distV[]V},5->0
7,operator{V[]getR[]T},6->0
8,param{ref[]:enemies},7->0
9,param{const txt=pos},7->1
10,operator{VgetRT},6->1
11,param{ref:self},10->0
12,param{const txt=curPos},10->1
,,
Syntax Tree,Output,
0,strike-> 0,
Nodes,Type,Output (Node -> Input)
0,operator{RgetR[]S},
1,param{const scal=0},0->0
2,param{ref[]:enemies},0->1