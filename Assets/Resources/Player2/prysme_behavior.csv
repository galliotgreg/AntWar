States,Name,Type
0,INIT,Init
1,spawn scoot,Inter
2,time older 30,Inter
3,lay scoot,trigger{lay}
4,spawn ouvrier,Inter
5,lay soldier,trigger{lay}
6,soldier older 10,Inter
7,lay lurker,trigger{lay}
8,lay ouvrier,trigger{lay}
9,time older 60,Inter
10,warrior finich,Inter
11,lay warrior,trigger{lay}
12,lay knight,trigger{lay}
,,
Transitions,Start State,End State
0,INIT,time older 30
1,INIT,spawn scoot
2,spawn scoot,lay scoot
3,spawn scoot,spawn ouvrier
4,time older 30,soldier older 10
5,time older 30,lay soldier
6,spawn ouvrier,lay lurker
7,spawn ouvrier,lay ouvrier
8,soldier older 10,time older 60
9,time older 60,warrior finich
10,time older 60,lay warrior
11,warrior finich,lay knight
,,
Syntax Tree,Output,
0,0,
Nodes,Type,Output (Node -> Input)
0,operator{B>SS},
1,param{const scal=30},0->1
2,operator{SgetRT},0->0
3,param{const txt=time},2->1
4,param{ref:game},2->0
,,
Syntax Tree,Output,
0,2,
Nodes,Type,Output (Node -> Input)
0,operator{B<SS},
1,param{const scal=2},0->1
2,operator{SgetRT},0->0
3,param{const txt=scoot},2->1
4,operator{RgetRT},2->0
5,param{const txt=population},4->1
6,param{ref:home},4->0
,,
Syntax Tree,Output,
0,4,
Nodes,Type,Output (Node -> Input)
0,operator{B>SS},
1,param{const scal=10},0->1
2,operator{SgetRT},0->0
3,param{const txt=soldier},2->1
4,operator{RgetRT},2->0
5,param{ref:home},4->0
6,param{const txt=population},4->1
,,
Syntax Tree,Output,
0,6,
Nodes,Type,Output (Node -> Input)
0,operator{B<SS},
1,param{const scal=2},0->1
2,operator{SgetRT},0->0
3,param{const txt=lurker},2->1
4,operator{RgetRT},2->0
5,param{ref:home},4->0
6,param{const txt=population},4->1
,,
Syntax Tree,Output,
0,7,
Nodes,Type,Output (Node -> Input)
0,operator{B<SS},
1,param{const scal=3},0->1
2,operator{SgetRT},0->0
3,param{const txt=ouvrier},2->1
4,operator{RgetRT},2->0
5,param{const txt=population},4->1
6,param{ref:home},4->0
,,
Syntax Tree,Output,
0,8,
Nodes,Type,Output (Node -> Input)
0,operator{B>SS},
1,param{const scal=60},0->1
2,operator{SgetRT},0->0
3,param{const txt=time},2->1
4,param{ref:game},2->0
,,
Syntax Tree,Output,
0,9,
Nodes,Type,Output (Node -> Input)
0,operator{B>SS},
1,param{const scal=5},0->1
2,operator{SgetRT},0->0
3,param{const txt=warrior},2->1
4,operator{RgetRT},2->0
5,param{const txt=population},4->1
6,param{ref:home},4->0
,,
Syntax Tree,Output,
0,11,
Nodes,Type,Output (Node -> Input)
0,operator{B>SS},
1,param{const scal=90},0->1
2,operator{SgetRT},0->0
3,param{const txt=time},2->1
4,param{ref:game},2->0
,,
Syntax Tree,Output,
0,lay scoot->0,
Nodes,Type,Output (Node -> Input)
0,param{const txt=scoot},
,,
Syntax Tree,Output,
0,lay soldier->0,
Nodes,Type,Output (Node -> Input)
0,param{const txt=soldier},
,,
Syntax Tree,Output,
0,lay ouvrier->0,
Nodes,Type,Output (Node -> Input)
0,param{const txt=ouvrier},
,,
Syntax Tree,Output,
0,lay warrior->0,
Nodes,Type,Output (Node -> Input)
0,param{const txt=warrior},
,,
Syntax Tree,Output,
0,lay knight->0,
Nodes,Type,Output (Node -> Input)
0,param{const txt=knight},
,,
Syntax Tree,Output,
0,lay lurker->0,
Nodes,Type,Output (Node -> Input)
0,param{const txt=lurker},