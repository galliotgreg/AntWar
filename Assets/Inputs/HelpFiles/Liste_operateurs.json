[{
		"ID": 0,
		"Title": "Généralités",
		"Content": [{
				"SubTitle": "",
				"Content": " Vous trouverez ici une liste exhaustive de tous les opérateurs classés selon la fonction qu'ils exécutent."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 1,
		"Title": "Opérateurs Logiques",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les Opérateurs Logiques permettent d'établir des liens logiques entre les deux attributs qu'ils prennent en entrée. Ils renvoient un booléen."
			},
			{
				"SubTitle": "Bool_And_Bool_Bool",
				"Content": "Retour : bool\nSymbole : B&&BB\nArgument 1 : bool\nArgument 2 : bool\nDescription : Opérateur logique \"And\""
			},
			{
				"SubTitle": "Bool_Not_Bool",
				"Content": "Retour : bool\nSymbole : B!B\nArgument 1 : bool\nDescription : Opérateur logique \"Not\""
			},
			{
				"SubTitle": "Bool_Or_Bool_Bool",
				"Content": "Retour : bool\nSymbole : B||BB\nArgument 1 : bool\nArgument 2 : bool\nDescription : Opérateur logique \"Or\""
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 2,
		"Title": "Opérateurs de Définition",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les Opérateurs de définition sont utilisés pour vérifier si un paramètre est bien défini, afin d'éviter des erreurs en utilisant des opérateurs prenant en entrée des paramètres non existants."
			},
			{
				"SubTitle": "Bool_IsSet_Bool",
				"Content": "Retour : bool\nSymbole : BisSetB\nArgument 1 : bool\nDescription : Vrai si l'argument \"arg1\" en paramètre est un booleen défini, sinon retourne faux."
			},
			{
				"SubTitle": "Bool_IsSet_Color",
				"Content": "Retour : bool\nSymbole : BisSetC\nArgument 1 : color\nDescription : Vrai si l'argument \"arg1\" en paramètre est une couleur définie, sinon retourne faux."
			},
			{
				"SubTitle": "Bool_IsSet_Ref",
				"Content": "Retour : bool\nSymbole : BisSetR\nArgument 1 : ref\nDescription : Vrai si l'argument \"arg1\" en paramètre est une reference définie, sinon retourne faux."
			},
			{
				"SubTitle": "Bool_IsSet_Scal",
				"Content": "Retour : bool\nSymbole : BisSetS\nArgument 1 : scal\nDescription : Vrai si l'argument \"arg1\" en paramètre est un scalaire défini, sinon retourne faux."
			},
			{
				"SubTitle": "Bool_IsSet_Txt",
				"Content": "Retour : bool\nSymbole : BisSetT\nArgument 1 : txt\nDescription : Vrai si l'argument \"arg1\" en paramètre est un texte défini, sinon retourne faux."
			},
			{
				"SubTitle": "Bool_IsSet_Vec",
				"Content": "Retour : bool\nSymbole : BisSetV\nArgument 1 : vec\nDescription : Vrai si l'argument \"arg1\" en paramètre est un vecteur défini, sinon retourne faux."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 3,
		"Title": "Opérateurs Mathématiques",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les Opérateurs mathématiques regroupent les calculs possibles entre des nombres ou des vecteurs."
			},
			{
				"SubTitle": "Scal_Div_Scal_Scal",
				"Content": "Retour : scal\nSymbole : S/SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Division de 2 scalaires."
			},
			{
				"SubTitle": "Scal_Prod_Scal_Scal",
				"Content": "Retour : scal\nSymbole : S*SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Produit de 2 scalaires."
			},
			{
				"SubTitle": "Scal_Sub_Scal_Scal",
				"Content": "Retour : scal\nSymbole : S-SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Soustraction de 2 scalaires."
			},
			{
				"SubTitle": "Scal_Sum_Scal_Scal",
				"Content": "Retour : scal\nSymbole : S+SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Addition de 2 scalaires."
			},
			{
				"SubTitle": "Scal_Dist_Vec_Vec",
				"Content": "Retour : scal\nSymbole : SdistVV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Calcule la distance entre deux points."
			},
			{
				"SubTitle": "ScalTab_Dist_VecTab_Vec",
				"Content": "Retour : scal[]\nSymbole : S[]distV[]V\nArgument 1 : vec[]\nArgument 2 : vec\nDescription : Retourne un tableau de distance à partir du tableau de position \"arg1\" et de la position \"arg2\"."
			},
			{
				"SubTitle": "Scal_Dot_Vec_Vec",
				"Content": "Retour : scal\nSymbole : S.VV\nArgument 1 : scal\nArgument 2 : scal\nDescription : Produit scalaire de 2 vecteurs."
			},
			{
				"SubTitle": "Vec_Prod_Scal_Vec",
				"Content": "Retour : vec\nSymbole : V*SV\nArgument 1 : scal\nArgument 2 : vec\nDescription : Produit d'un scalaire par un vecteur."
			},
			{
				"SubTitle": "Vec_Prod_Vec_Scal",
				"Content": "Retour : vec\nSymbole : V*VS\nArgument 1 : vec\nArgument 2 : scal\nDescription : Produit d'un vecteur par un scalaire."
			},
			{
				"SubTitle": "Vec_Sub_Vec_Vec",
				"Content": "Retour : vec\nSymbole : V-VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Soustraction de 2 vecteurs."
			},
			{
				"SubTitle": "Vec_Sum_Vec_Vec",
				"Content": "Retour : vec\nSymbole : V+VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Addition de 2 vecteurs."
			},
			{
				"SubTitle": "Vec_Prod_Vec_Vec",
				"Content": "Retour : vec\nSymbole : V*VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Multiplication terme à terme de 2 vecteurs."
			},
			{
				"SubTitle": "Vec_TermDiv_Vec_Vec",
				"Content": "Retour : vec\nSymbole : V/VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Division terme à terme de 2 vecteurs."
			},
			{
				"SubTitle": "Vec_RandCircle_Vec_Scal",
				"Content": "Retour : vec\nSymbole : VrandCircleVS\nArgument 1 : vec\nArgument 2 : scal\nDescription : Choisit aléatoirement un point sur le cercle de centre \"arg1\" et de rayon \"arg2\"."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 4,
		"Title": "Opérateurs Comparateurs",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les Opérateurs Comparateurs examinent l'égalité ou la différence entre deux paramètres de même type. Ils renvoient un booléen."
			},
			{
				"SubTitle": "Bool_LessThan_Scal_Scal",
				"Content": "Retour : bool\nSymbole : B<SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Vérifie si arg1 < arg2."
			},
			{
				"SubTitle": "Bool_GreaterThan_Scal_Scal",
				"Content": "Retour : bool\nSymbole : B>SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Vérifie si arg1 > arg2."
			},
			{
				"SubTitle": "Bool_Equals_Bool_Bool",
				"Content": "Retour : bool\nSymbole : B==BB\nArgument 1 : bool\nArgument 2 : bool\nDescription : Teste l'égalité entre deux booléens."
			},
			{
				"SubTitle": "Bool_Equals_Color_Color",
				"Content": "Retour : bool\nSymbole : B==CC\nArgument 1 : color\nArgument 2 : color\nDescription : Teste l'égalité entre deux couleurs."
			},
			{
				"SubTitle": "Bool_RefEquals_Ref_Ref",
				"Content": "Retour : bool\nSymbole : B==RR\nArgument 1 : ref\nArgument 2 : ref\nDescription : Teste l'égalité entre deux rférences instanciées durant une partie."
			},
			{
				"SubTitle": "Bool_Equals_Scal_Scal",
				"Content": "Retour : bool\nSymbole : B==SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Teste l'égalité entre deux scalaires."
			},
			{
				"SubTitle": "Bool_Equals_Txt_Txt",
				"Content": "Retour : bool\nSymbole : B==TT\nArgument 1 : txt\nArgument 2 : txt\nDescription : Teste l'égalité entre deux chaines de caractères."
			},
			{
				"SubTitle": "Bool_Equals_Vec_Vec",
				"Content": "Retour : bool\nSymbole : B==VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Teste l'égalité entre deux vecteurs."
			},
			{
				"SubTitle": "Bool_NotEquals_Bool_Bool",
				"Content": "Retour : bool\nSymbole : B!=BB\nArgument 1 : bool\nArgument 2 : bool\nDescription : Teste l'inégalité entre deux booléens."
			},
			{
				"SubTitle": "Bool_NotEquals_Color_Color",
				"Content": "Retour : bool\nSymbole : B!=CC\nArgument 1 : color\nArgument 2 : color\nDescription : Teste l'inégalité entre deux couleurs."
			},
			{
				"SubTitle": "Bool_NotEquals_Ref_Ref",
				"Content": "Retour : bool\nSymbole : B!=RR\nArgument 1 : ref\nArgument 2 : ref\nDescription : Teste l'inégalité entre deux références instanciées durant une partie."
			},
			{
				"SubTitle": "Bool_NotEquals_Scal_Scal",
				"Content": "Retour : bool\nSymbole : B!=SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Teste l'inégalité entre deux scalaires."
			},
			{
				"SubTitle": "Bool_NotEquals_Txt_Txt",
				"Content": "Retour : bool\nSymbole : B!=TT\nArgument 1 : txt\nArgument 2 : txt\nDescription : Teste l'inégalité entre deux chaines de caractères."
			},
			{
				"SubTitle": "Bool_NotEquals_Vec_Vec",
				"Content": "Retour : bool\nSymbole : B!=VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Teste l'inégalité entre deux vecteurs."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 5,
		"Title": "Accesseurs",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les accesseurs ont pour fonction de récupérer un élément au sein d'un tableau."
			},
			{
				"SubTitle": "Bool_Get_BoolTab_Scal",
				"Content": "Retour : bool\nSymbole : BgetB[]S\nArgument 1 : bool[]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de booléens. Retourne l'élément \"Arg2\" du tableau \"Arg1\"."
			},
			{
				"SubTitle": "Color_Get_ColorTab_Scal",
				"Content": "Retour : color\nSymbole : CgetC[]S\nArgument 1 : col[]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de couleurs. Retourne l'élément \"Arg2\" du tableau \"Arg1\"."
			},
			{
				"SubTitle": "Ref_Get_RefTab_Scal",
				"Content": "Retour : ref\nSymbole : RgetR[]S\nArgument 1 : ref[]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de références. Retourne l'élément \"Arg2\" du tableau \"Arg1\"."
			},
			{
				"SubTitle": "Scal_Get_ScalTab_Scal",
				"Content": "Retour : scal\nSymbole : SgetS[]S\nArgument 1 : scal[]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de scalaires. Retourne l'élément \"Arg2\" du tableau \"Arg1\"."
			},
			{
				"SubTitle": "Txt_Get_TxtTab_Scal",
				"Content": "Retour : txt\nSymbole : TgetT[]S\nArgument 1 : txt[]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de chaines de caractères. Retourne l'élément \"Arg2\" du tableau \"Arg1\"."
			},
			{
				"SubTitle": "Vec_Get_VecTab_Scal",
				"Content": "Retour : vec\nSymbole : VgetV[]S\nArgument 1 : vec[]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de vecteurs. Retourne l'élément \"Arg2\" du tableau \"Arg1\"."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 6,
		"Title": "Extracteurs",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les extracteurs ont pour fonction de récupérer un attribut propre à une référence. Le nom de l'attribut doit être indiqué en texte en tant qu' \"arg2\"."
			},
			{
				"SubTitle": "Vec_Get_Ref_Txt",
				"Content": "Retour : vec\nSymbole : VgetRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Retourne l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un vecteur."
			},
			{
				"SubTitle": "Bool_Get_Ref_Txt",
				"Content": "Retour : bool\nSymbole : BgetRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Retourne l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un booléen."
			},
			{
				"SubTitle": "Color_Get_Ref_Txt",
				"Content": "Retour : scal\nSymbole : CgetRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Retourne l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être une couleur."
			},
			{
				"SubTitle": "Scal_Get_Ref_Txt",
				"Content": "Retour : txt\nSymbole : VgetRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Retourne l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un scalaire."
			},
			{
				"SubTitle": "Txt_Get_Ref_Txt",
				"Content": "Retour : txt\nSymbole : VgetRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Retourne l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un texte."
			},
			{
				"SubTitle": "BoolTab_Get_Ref_Txt",
				"Content": "Retour : bool[]\nSymbole : B[]getRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Retourne l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un tableau de booléens."
			},
			{
				"SubTitle": "VecTab_Get_Ref_Txt",
				"Content": "Retour : vec[]\nSymbole : V[]getRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Retourne l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un tableau de vecteurs."
			},
			{
				"SubTitle": "ScalTab_Get_RefTab_Txt",
				"Content": "Retour : scal[]\nSymbole : S[]getR[]T\nArgument 1 : ref[]\nArgument 2 : txt\nDescription : Retourne un tableau de scalaires en extrayant l'attribut \"arg2\" de chaque référence dans le tableau \"arg1\"."
			},
			{
				"SubTitle": "VecTab_Get_RefTab_Txt",
				"Content": "Retour : vec[]\nSymbole : V[]getR[]T\nArgument 1 : ref[]\nArgument 2 : txt\nDescription : Retourne un tableau de vecteurs en extrayant l'attribut \"arg2\" de chaque référence dans le tableau \"arg1\"."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 7,
		"Title": "Agrégateurs",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Un Agrégateur permet de créer un tableau à partir d'éléments simples ou bien de tableaux déjà existants. Contrairement aux autres opérateurs, un agrégateur prend autant d’arguments en entrée que nécessaire."
			},
			{
				"SubTitle": "BoolTab_Agg_BoolStar",
				"Content": "Retour : bool[]\nSymbole : B[]aggB*\nArgument 1 : bool*\nDescription : Agrégateur de booléens. Il prend n arguments en entrée et les agrège en un tableau qu'il retourne en sortie. Les arguments peuvent être des bool ou des bool[]."
			},
			{
				"SubTitle": "ColorTab_Agg_ColorStar",
				"Content": "Retour : color[]\nSymbole : C[]aggC*\nArgument 1 : color*\nDescription : Agrégateur de couleurs. Il prend n arguments en entrée et les agrège en un tableau qu'il retourne en sortie. Les arguments peuvent être des color ou des color[]."
			},
			{
				"SubTitle": "RefTab_Agg_RefStar",
				"Content": "Retour : ref[]\nSymbole : R[]aggR*\nArgument 1 : ref*\nDescription : Agrégateur de références. Il prend n arguments en entrée et les agrège en un tableau qu'il retourne en sortie. Les arguments peuvent être des ref ou des ref[]."
			},
			{
				"SubTitle": "ScalTab_Agg_ScalStar",
				"Content": "Retour : scal[]\nSymbole : S[]aggS*\nArgument 1 : scal*\nDescription : Agrégateur de scalaires. Il prend n arguments en entrée et les agrège en un tableau qu'il retourne en sortie. Les arguments peuvent être des scal ou des scal[]."
			},
			{
				"SubTitle": "TxtTab_Agg_TxtStar",
				"Content": "Retour : txt[]\nSymbole : T[]aggT*\nArgument 1 : txt*\nDescription : Agrégateur de textes. Il prend n arguments en entrée et les agrège en un tableau qu'il retourne en sortie. Les arguments peuvent être des txt ou des txt[]."
			},
			{
				"SubTitle": "VecTab_Agg_VecStar",
				"Content": "Retour : vec[]\nSymbole : V[]aggV*\nArgument 1 : vec*\nDescription : Agrégateur de vecteurs. Il prend n arguments en entrée et les agrège en un tableau qu'il retourne en sortie. Les arguments peuvent être des vec ou des vec[]."
			}


		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 8,
		"Title": "Opérateurs Filtres",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les Opérateurs filtres trient un tableau pris en entrée pour retourner un tableau qui possède uniquement les valeurs répondant à des critères spécifiques."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Bool",
				"Content": "Retour : ref[]\nSymbole : R[]where==R[]TB\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : bool\nDescription : Filtre les références présentes dans \"arg1\" respectant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (booleen)."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Color",
				"Content": "Retour : ref[]\nSymbole : R[]where==R[]TC\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : color\nDescription : Filtre les références présentes dans \"arg1\" respectant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (color)."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Ref",
				"Content": "Retour : ref[]\nSymbole : R[]where==R[]TR\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : ref\nDescription : Filtre les références présentes dans \"arg1\" respectant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (référence)."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Scal",
				"Content": "Retour : ref[]\nSymbole : R[]where==R[]TS\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : scal\nDescription : Filtre les références présentes dans \"arg1\" respectant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (scalaire)."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Txt",
				"Content": "Retour : ref[]\nSymbole : R[]where==R[]TT\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : txt\nDescription : Filtre les références présentes dans \"arg1\" respectant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (texte)."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Vec",
				"Content": "Retour : ref[]\nSymbole : R[]where==R[]TV\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : vec\nDescription : Filtre les références présentes dans \"arg1\" respectant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (vecteur)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Bool",
				"Content": "Retour : ref[]\nSymbole : R[]where!=R[]R[]TB\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : bool\nDescription : Filtre les références présentes dans \"arg1\" respectant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (booleen)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Color",
				"Content": "Retour : ref[]\nSymbole : R[]where!=R[]R[]TC\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : color\nDescription : Filtre les références présentes dans \"arg1\" respectant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (color)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Ref",
				"Content": "Retour : ref[]\nSymbole : R[]where!=R[]R[]TR\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : ref\nDescription : Filtre les références présentes dans \"arg1\" respectant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (référence)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Scal",
				"Content": "Retour : ref[]\nSymbole : R[]where!=R[]R[]TS\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : scal\nDescription : Filtre les références présentes dans \"arg1\" respectant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (scalaire)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Txt",
				"Content": "Retour : ref[]\nSymbole : R[]where!=R[]R[]TT\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : txt\nDescription : Filtre les références présentes dans \"arg1\" respectant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (texte)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Vec",
				"Content": "Retour : ref[]\nSymbole : R[]where!=R[]R[]TV\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : vec\nDescription : Filtre les références présentes dans \"arg1\" respectant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (vecteur)."
			},
			{
				"SubTitle": "RefTab_Wherelesser_RefTab_Txt_Vec",
				"Content": "Retour : ref[]\nSymbole : R[]where<R[]R[]TS\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : scal\nDescription : Filtre les références présentes dans \"arg1\" respectant l'inégalité  entre l'attribut \"arg2\" et la valeur \"arg3\" (scalaire)."
			},
			{
				"SubTitle": "RefTab_WhereGreater_RefTab_Txt_Vec",
				"Content": "Retour : ref[]\nSymbole : R[]where>R[]R[]TS\nArgument 1 : ref[]\nArgument 2 : txt\nArgument 3 : scal\nDescription : Filtre les références présentes dans \"arg1\" respectant l'inégalité  entre l'attribut \"arg2\" et la valeur \"arg3\" (scalaire)."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 9,
		"Title": "Opérateurs Tableaux",
		"Content": [{
				"SubTitle": "Description",
				"Content": " Ces opérateurs permettent de récupérer des informations importantes sur les tableaux et leur contenu."
			},
			{
				"SubTitle": "Scal_MaxId_ScalTab",
				"Content": "Retour : scal\nSymbole : SmaxIdS[]\nArgument 1 : scal[]\nDescription : Retourne l'indice de la plus grande valeur contenue dans le tableau passé en paramètre."
			},
			{
				"SubTitle": "Scal_MinId_ScalTab",
				"Content": "Retour : scal\nSymbole : SminIdS[]\nArgument 1 : scal[]\nDescription : Retourne l'indice de la plus petite valeur contenue dans le tableau passé en paramètre."
			},
			{
				"SubTitle": "Scal_MaxVal_ScalTab",
				"Content": "Retour : scal\nSymbole : SmaxValS[]\nArgument 1 : scal[]\nDescription : Retourne la plus grande valeur contenue dans le tableau passé en paramètre."
			},
			{
				"SubTitle": "Scal_MinVal_ScalTab",
				"Content": "Retour : scal\nSymbole : SminValS[]\nArgument 1 : scal[]\nDescription : Retourne la plus petite valeur contenue dans le tableau passé en paramètre."
			},
			{
				"SubTitle": "Scal_Size_BoolTab",
				"Content": "Retour : scal\nSymbole : SsizeB[]\nArgument 1 : bool[]\nDescription : Retourne la taille du tableau de booleens passé en argument."
			},
			{
				"SubTitle": "Scal_Size_ColorTab",
				"Content": "Retour : scal\nSymbole : SsizeC[]\nArgument 1 : color[]\nDescription : Retourne la taille du tableau de couleurs passé en argument."
			},
			{
				"SubTitle": "Scal_Size_RefTab",
				"Content": "Retour : scal\nSymbole : SsizeR[]\nArgument 1 : ref[]\nDescription : Retourne la taille du tableau de références passé en argument."
			},
			{
				"SubTitle": "Scal_Size_ScalTab",
				"Content": "Retour : scal\nSymbole : SsizeS[]\nArgument 1 : scal[]\nDescription : Retourne la taille du tableau de scalaires passé en argument."
			},
			{
				"SubTitle": "Scal_Size_TxtTab",
				"Content": "Retour : scal\nSymbole : SsizeT[]\nArgument 1 : txt[]\nDescription : Retourne la taille du tableau de textes passé en argument."
			},
			{
				"SubTitle": "Scal_Size_VecTab",
				"Content": "Retour : scal\nSymbole : SsizeV[]\nArgument 1 : vec[]\nDescription : Retourne la taille du tableau de vecteurs passé en argument."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 10,
		"Title": "Inverseurs",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Un Inverseur prend un tableau et change l’ordre des éléments, le début devient la fin et inversement."
			},
			{
				"SubTitle": "VecTab_Reverse_VecTab",
				"Content": "Retour : vec[]\nSymbole : V[]reverseV[]\nArgument 1 : vec[]\nDescription : Inverse la liste de vecteurs passée en argument."
			}
		],
		"Image": "",
		"Video": ""
	}

]