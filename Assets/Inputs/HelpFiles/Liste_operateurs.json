[{
		"ID": 0,
		"Title": "Généralités",
		"Content": [{
				"SubTitle": "",
				"Content": "Vous trouverez ici une liste exhaustive de tous les opérateurs, classés selon leur fonction."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 1,
		"Title": "Opérateurs Logiques",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les opérateurs logiques permettent d'établir des liens logiques entre leurs deux arguments. Ils renvoient un booléen."
			},
			{
				"SubTitle": "Bool_And_Bool_Bool",
				"Content": "Retour : bool\nSymbole : B&&BB\nArgument 1 : bool\nArgument 2 : bool\nDescription : Opérateur logique \"and\""
			},
			{
				"SubTitle": "Bool_Not_Bool",
				"Content": "Retour : bool\nSymbole : B!B\nArgument 1 : bool\nDescription : Opérateur logique \"not\""
			},
			{
				"SubTitle": "Bool_Or_Bool_Bool",
				"Content": "Retour : bool\nSymbole : B||BB\nArgument 1 : bool\nArgument 2 : bool\nDescription : Opérateur logique \"or\""
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 2,
		"Title": "Opérateurs de Définition",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les opérateurs de définition permettent de vérifier si un paramètre est bien défini, afin d'éviter des erreurs résultant d'opérateurs prenant en entrée des paramètres non-existants."
			},
			{
				"SubTitle": "Bool_IsSet_Bool",
				"Content": "Retour : bool\nSymbole : BisSetB\nArgument 1 : bool\nDescription : Renvoie vrai si l'argument \"arg1\" en paramètre est un booleen défini, sinon renvoie faux."
			},
			{
				"SubTitle": "Bool_IsSet_Color",
				"Content": "Retour : bool\nSymbole : BisSetC\nArgument 1 : color\nDescription : Renvoie vrai si l'argument \"arg1\" en paramètre est une couleur définie, sinon renvoie faux."
			},
			{
				"SubTitle": "Bool_IsSet_Ref",
				"Content": "Retour : bool\nSymbole : BisSetR\nArgument 1 : ref\nDescription : Renvoie vrai si l'argument \"arg1\" en paramètre est une référence définie, sinon renvoie faux."
			},
			{
				"SubTitle": "Bool_IsSet_Scal",
				"Content": "Retour : bool\nSymbole : BisSetS\nArgument 1 : scal\nDescription : Renvoie vrai si l'argument \"arg1\" en paramètre est un scalaire défini, sinon renvoie faux."
			},
			{
				"SubTitle": "Bool_IsSet_Txt",
				"Content": "Retour : bool\nSymbole : BisSetT\nArgument 1 : txt\nDescription : Renvoie vrai si l'argument \"arg1\" en paramètre est un texte défini, sinon renvoie faux."
			},
			{
				"SubTitle": "Bool_IsSet_Vec",
				"Content": "Retour : bool\nSymbole : BisSetV\nArgument 1 : vec\nDescription : Renvoie vrai si l'argument \"arg1\" en paramètre est un vecteur défini, sinon renvoie faux."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 3,
		"Title": "Opérateurs Mathématiques",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les opérateurs mathématiques regroupent les calculs possibles entre des nombres ou des vecteurs."
			},
			{
				"SubTitle": "Scal_Div_Scal_Scal",
				"Content": "Retour : scal\nSymbole : S/SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Effectue la division de 2 scalaires."
			},
			{
				"SubTitle": "Scal_Prod_Scal_Scal",
				"Content": "Retour : scal\nSymbole : S*SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Effectue le produit de 2 scalaires."
			},
			{
				"SubTitle": "Scal_Sub_Scal_Scal",
				"Content": "Retour : scal\nSymbole : S-SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Effectue la soustraction de 2 scalaires."
			},
			{
				"SubTitle": "Scal_Sum_Scal_Scal",
				"Content": "Retour : scal\nSymbole : S+SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Effectue l'addition de 2 scalaires."
			},
			{
				"SubTitle": "Scal_Dist_Vec_Vec",
				"Content": "Retour : scal\nSymbole : SdistVV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Calcule la distance entre deux points."
			},
			{
				"SubTitle": "ScalTab_Dist_VecTab_Vec",
				"Content": "Retour : scal[ ]\nSymbole : S[ ]distV[ ]V\nArgument 1 : vec[ ]\nArgument 2 : vec\nDescription : Renvoie un tableau de distances à partir du tableau de positions \"arg1\" et de la position \"arg2\"."
			},
			{
				"SubTitle": "Scal_Dot_Vec_Vec",
				"Content": "Retour : scal\nSymbole : S.VV\nArgument 1 : scal\nArgument 2 : scal\nDescription : Effectue le produit scalaire de 2 vecteurs."
			},
			{
				"SubTitle": "Vec_Prod_Scal_Vec",
				"Content": "Retour : vec\nSymbole : V*SV\nArgument 1 : scal\nArgument 2 : vec\nDescription : Effectue le produit d'un scalaire par un vecteur."
			},
			{
				"SubTitle": "Vec_Prod_Vec_Scal",
				"Content": "Retour : vec\nSymbole : V*VS\nArgument 1 : vec\nArgument 2 : scal\nDescription : Effectue le produit d'un vecteur par un scalaire."
			},
			{
				"SubTitle": "Vec_Sub_Vec_Vec",
				"Content": "Retour : vec\nSymbole : V-VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Effectue la soustraction de 2 vecteurs."
			},
			{
				"SubTitle": "Vec_Sum_Vec_Vec",
				"Content": "Retour : vec\nSymbole : V+VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Effectue l'addition de 2 vecteurs."
			},
			{
				"SubTitle": "Vec_Prod_Vec_Vec",
				"Content": "Retour : vec\nSymbole : V*VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Effectue le produit terme à terme de 2 vecteurs."
			},
			{
				"SubTitle": "Vec_TermDiv_Vec_Vec",
				"Content": "Retour : vec\nSymbole : V/VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Effectue la division terme à terme de 2 vecteurs."
			},
			{
				"SubTitle": "Vec_RandCircle_Vec_Scal",
				"Content": "Retour : vec\nSymbole : VrandCircleVS\nArgument 1 : vec\nArgument 2 : scal\nDescription : Choisit aléatoirement un point sur le cercle de centre \"arg1\" et de rayon \"arg2\"."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 4,
		"Title": "Opérateurs Comparateurs",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les opérateurs comparateurs contrôlent l'égalité ou la différence entre deux paramètres de même type. Ils renvoient un booléen."
			},
			{
				"SubTitle": "Bool_LessThan_Scal_Scal",
				"Content": "Retour : bool\nSymbole : B<SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Vérifie si arg1 est inférieur à arg2."
			},
			{
				"SubTitle": "Bool_GreaterThan_Scal_Scal",
				"Content": "Retour : bool\nSymbole : B>SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Vérifie si arg1 est supérieur à arg2."
			},
			{
				"SubTitle": "Bool_Equals_Bool_Bool",
				"Content": "Retour : bool\nSymbole : B==BB\nArgument 1 : bool\nArgument 2 : bool\nDescription : Vérifie l'égalité entre deux booléens."
			},
			{
				"SubTitle": "Bool_Equals_Color_Color",
				"Content": "Retour : bool\nSymbole : B==CC\nArgument 1 : color\nArgument 2 : color\nDescription : Vérifie l'égalité entre deux couleurs."
			},
			{
				"SubTitle": "Bool_RefEquals_Ref_Ref",
				"Content": "Retour : bool\nSymbole : B==RR\nArgument 1 : ref\nArgument 2 : ref\nDescription : Vérifie l'égalité entre deux références instanciées durant une partie."
			},
			{
				"SubTitle": "Bool_Equals_Scal_Scal",
				"Content": "Retour : bool\nSymbole : B==SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Vérifie l'égalité entre deux scalaires."
			},
			{
				"SubTitle": "Bool_Equals_Txt_Txt",
				"Content": "Retour : bool\nSymbole : B==TT\nArgument 1 : txt\nArgument 2 : txt\nDescription : Vérifie l'égalité entre deux chaînes de caractères."
			},
			{
				"SubTitle": "Bool_Equals_Vec_Vec",
				"Content": "Retour : bool\nSymbole : B==VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Vérifie l'égalité entre deux vecteurs."
			},
			{
				"SubTitle": "Bool_NotEquals_Bool_Bool",
				"Content": "Retour : bool\nSymbole : B!=BB\nArgument 1 : bool\nArgument 2 : bool\nDescription : Vérifie la différence entre deux booléens."
			},
			{
				"SubTitle": "Bool_NotEquals_Color_Color",
				"Content": "Retour : bool\nSymbole : B!=CC\nArgument 1 : color\nArgument 2 : color\nDescription : Vérifie la différence entre deux couleurs."
			},
			{
				"SubTitle": "Bool_NotEquals_Ref_Ref",
				"Content": "Retour : bool\nSymbole : B!=RR\nArgument 1 : ref\nArgument 2 : ref\nDescription : Vérifie la différence entre deux références instanciées durant une partie."
			},
			{
				"SubTitle": "Bool_NotEquals_Scal_Scal",
				"Content": "Retour : bool\nSymbole : B!=SS\nArgument 1 : scal\nArgument 2 : scal\nDescription : Vérifie la différence entre deux scalaires."
			},
			{
				"SubTitle": "Bool_NotEquals_Txt_Txt",
				"Content": "Retour : bool\nSymbole : B!=TT\nArgument 1 : txt\nArgument 2 : txt\nDescription : Vérifie la différence entre deux chaînes de caractères."
			},
			{
				"SubTitle": "Bool_NotEquals_Vec_Vec",
				"Content": "Retour : bool\nSymbole : B!=VV\nArgument 1 : vec\nArgument 2 : vec\nDescription : Vérifie la différence entre deux vecteurs."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 5,
		"Title": "Accesseurs",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les accesseurs ont pour fonction de récupérer un élément au sein d'un tableau."
			},
			{
				"SubTitle": "Bool_Get_BoolTab_Scal",
				"Content": "Retour : bool\nSymbole : BgetB[ ]S\nArgument 1 : bool[ ]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de booléens. Renvoie l'élément \"arg2\" du tableau \"arg1\"."
			},
			{
				"SubTitle": "Color_Get_ColorTab_Scal",
				"Content": "Retour : color\nSymbole : CgetC[ ]S\nArgument 1 : col[ ]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de couleurs. Renvoie l'élément \"arg2\" du tableau \"arg1\"."
			},
			{
				"SubTitle": "Ref_Get_RefTab_Scal",
				"Content": "Retour : ref\nSymbole : RgetR[ ]S\nArgument 1 : ref[ ]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de références. Renvoie l'élément \"arg2\" du tableau \"arg1\"."
			},
			{
				"SubTitle": "Scal_Get_ScalTab_Scal",
				"Content": "Retour : scal\nSymbole : SgetS[ ]S\nArgument 1 : scal[ ]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de scalaires. Renvoie l'élément \"arg2\" du tableau \"arg1\"."
			},
			{
				"SubTitle": "Txt_Get_TxtTab_Scal",
				"Content": "Retour : txt\nSymbole : TgetT[ ]S\nArgument 1 : txt[ ]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de chaînes de caractères. Renvoie l'élément \"arg2\" du tableau \"arg1\"."
			},
			{
				"SubTitle": "Vec_Get_VecTab_Scal",
				"Content": "Retour : vec\nSymbole : VgetV[ ]S\nArgument 1 : vec[ ]\nArgument 2 : scal\nDescription : Accesseur d'un tableau de vecteurs. Renvoie l'élément \"arg2\" du tableau \"arg1\"."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 6,
		"Title": "Extracteurs",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les extracteurs ont pour fonction de récupérer un attribut propre à une référence. Le nom de l'attribut doit être indiqué sous forme d'un texte passé en \"arg2\"."
			},
			{
				"SubTitle": "Vec_Get_Ref_Txt",
				"Content": "Retour : vec\nSymbole : VgetRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Renvoie l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un vecteur."
			},
			{
				"SubTitle": "Bool_Get_Ref_Txt",
				"Content": "Retour : bool\nSymbole : BgetRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Renvoie l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un booléen."
			},
			{
				"SubTitle": "Color_Get_Ref_Txt",
				"Content": "Retour : color\nSymbole : CgetRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Renvoie l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être une couleur."
			},
			{
				"SubTitle": "Scal_Get_Ref_Txt",
				"Content": "Retour : scal\nSymbole : SgetRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Renvoie l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un scalaire."
			},
			{
				"SubTitle": "Txt_Get_Ref_Txt",
				"Content": "Retour : txt\nSymbole : TgetRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Renvoie l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un texte."
			},
			{
				"SubTitle": "BoolTab_Get_Ref_Txt",
				"Content": "Retour : bool[ ]\nSymbole : B[ ]getRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Renvoie l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un tableau de booléens."
			},
			{
				"SubTitle": "VecTab_Get_Ref_Txt",
				"Content": "Retour : vec[ ]\nSymbole : V[ ]getRT\nArgument 1 : ref\nArgument 2 : txt\nDescription : Renvoie l'attribut \"arg2\" de la référence \"arg1\". Cet attribut doit être un tableau de vecteurs."
			},
			{
				"SubTitle": "ScalTab_Get_RefTab_Txt",
				"Content": "Retour : scal[ ]\nSymbole : S[ ]getR[ ]T\nArgument 1 : ref[ ]\nArgument 2 : txt\nDescription : Renvoie un tableau de scalaires en extrayant l'attribut \"arg2\" de chaque référence dans le tableau \"arg1\"."
			},
			{
				"SubTitle": "VecTab_Get_RefTab_Txt",
				"Content": "Retour : vec[ ]\nSymbole : V[ ]getR[ ]T\nArgument 1 : ref[ ]\nArgument 2 : txt\nDescription : Renvoie un tableau de vecteurs en extrayant l'attribut \"arg2\" de chaque référence dans le tableau \"arg1\"."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 7,
		"Title": "Agrégateurs",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les agrégateurs permettent de créer un tableau à partir d'éléments simples ou de tableaux déjà existants. Contrairement aux autres opérateurs, un agrégateur peut prendre autant d’arguments en entrée que nécessaire."
			},
			{
				"SubTitle": "BoolTab_Agg_BoolStar",
				"Content": "Retour : bool[ ]\nSymbole : B[ ]aggB*\nArgument 1 : bool*\nDescription : Agrégateur de booléens. Il prend n arguments en entrée, et les agrège en un tableau qu'il renvoie en sortie. Les arguments peuvent être des bool ou des bool[ ]."
			},
			{
				"SubTitle": "ColorTab_Agg_ColorStar",
				"Content": "Retour : color[ ]\nSymbole : C[ ]aggC*\nArgument 1 : color*\nDescription : Agrégateur de couleurs. Il prend n arguments en entrée, et les agrège en un tableau qu'il renvoie en sortie. Les arguments peuvent être des color ou des color[ ]."
			},
			{
				"SubTitle": "RefTab_Agg_RefStar",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]aggR*\nArgument 1 : ref*\nDescription : Agrégateur de références. Il prend n arguments en entrée, et les agrège en un tableau qu'il renvoie en sortie. Les arguments peuvent être des ref ou des ref[ ]."
			},
			{
				"SubTitle": "ScalTab_Agg_ScalStar",
				"Content": "Retour : scal[ ]\nSymbole : S[ ]aggS*\nArgument 1 : scal*\nDescription : Agrégateur de scalaires. Il prend n arguments en entrée, et les agrège en un tableau qu'il renvoie en sortie. Les arguments peuvent être des scal ou des scal[ ]."
			},
			{
				"SubTitle": "TxtTab_Agg_TxtStar",
				"Content": "Retour : txt[ ]\nSymbole : T[ ]aggT*\nArgument 1 : txt*\nDescription : Agrégateur de textes. Il prend n arguments en entrée, et les agrège en un tableau qu'il renvoie en sortie. Les arguments peuvent être des txt ou des txt[ ]."
			},
			{
				"SubTitle": "VecTab_Agg_VecStar",
				"Content": "Retour : vec[ ]\nSymbole : V[ ]aggV*\nArgument 1 : vec*\nDescription : Agrégateur de vecteurs. Il prend n arguments en entrée, et les agrège en un tableau qu'il renvoie en sortie. Les arguments peuvent être des vec ou des vec[ ]."
			}


		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 8,
		"Title": "Opérateurs Filtres",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les opérateurs filtres trient un tableau passé en entrée, et renvoient un tableau contenant uniquement les valeurs répondant à des critères spécifiques."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Bool",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where==R[ ]TB\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : bool\nDescription : Filtre les références présentes dans \"arg1\" vérifiant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (booléen)."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Color",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where==R[ ]TC\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : color\nDescription : Filtre les références présentes dans \"arg1\" vérifiant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (couleur)."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Ref",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where==R[ ]TR\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : ref\nDescription : Filtre les références présentes dans \"arg1\" vérifiant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (référence)."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Scal",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where==R[ ]TS\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : scal\nDescription : Filtre les références présentes dans \"arg1\" vérifiant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (scalaire)."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Txt",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where==R[ ]TT\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : txt\nDescription : Filtre les références présentes dans \"arg1\" vérifiant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (texte)."
			},
			{
				"SubTitle": "RefTab_WhereEquals_RefTab_Txt_Vec",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where==R[ ]TV\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : vec\nDescription : Filtre les références présentes dans \"arg1\" vérifiant l'égalité entre l'attribut \"arg2\" et la valeur \"arg3\" (vecteur)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Bool",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where!=R[ ]R[ ]TB\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : bool\nDescription : Filtre les références présentes dans \"arg1\" vérifiant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (booléen)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Color",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where!=R[ ]R[ ]TC\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : color\nDescription : Filtre les références présentes dans \"arg1\" vérifiant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (couleur)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Ref",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where!=R[ ]R[ ]TR\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : ref\nDescription : Filtre les références présentes dans \"arg1\" vérifiant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (référence)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Scal",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where!=R[ ]R[ ]TS\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : scal\nDescription : Filtre les références présentes dans \"arg1\" vérifiant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (scalaire)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Txt",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where!=R[ ]R[ ]TT\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : txt\nDescription : Filtre les références présentes dans \"arg1\" vérifiant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (texte)."
			},
			{
				"SubTitle": "RefTab_WhereNotEquals_RefTab_Txt_Vec",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where!=R[ ]R[ ]TV\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : vec\nDescription : Filtre les références présentes dans \"arg1\" vérifiant la différence entre l'attribut \"arg2\" et la valeur \"arg3\" (vecteur)."
			},
			{
				"SubTitle": "RefTab_Wherelesser_RefTab_Txt_Vec",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where<R[ ]R[ ]TS\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : scal\nDescription : Filtre les références présentes dans \"arg1\" vérifiant l'infériorité de l'attribut \"arg2\" par rapport à la valeur \"arg3\" (scalaire)."
			},
			{
				"SubTitle": "RefTab_WhereGreater_RefTab_Txt_Vec",
				"Content": "Retour : ref[ ]\nSymbole : R[ ]where>R[ ]R[ ]TS\nArgument 1 : ref[ ]\nArgument 2 : txt\nArgument 3 : scal\nDescription : Filtre les références présentes dans \"arg1\" vérifiant la supériorité de l'attribut \"arg2\" par rapport à la valeur \"arg3\" (scalaire)."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 9,
		"Title": "Opérateurs de Tableaux",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les opérateurs de tableaux permettent de récupérer des informations sur les tableaux et leur contenu."
			},
			{
				"SubTitle": "Scal_MaxId_ScalTab",
				"Content": "Retour : scal\nSymbole : SmaxIdS[ ]\nArgument 1 : scal[ ]\nDescription : Renvoie l'indice de la plus grande valeur contenue dans le tableau passé en paramètre."
			},
			{
				"SubTitle": "Scal_MinId_ScalTab",
				"Content": "Retour : scal\nSymbole : SminIdS[ ]\nArgument 1 : scal[ ]\nDescription : Renvoie l'indice de la plus petite valeur contenue dans le tableau passé en paramètre."
			},
			{
				"SubTitle": "Scal_MaxVal_ScalTab",
				"Content": "Retour : scal\nSymbole : SmaxValS[ ]\nArgument 1 : scal[ ]\nDescription : Renvoie la plus grande valeur contenue dans le tableau passé en paramètre."
			},
			{
				"SubTitle": "Scal_MinVal_ScalTab",
				"Content": "Retour : scal\nSymbole : SminValS[ ]\nArgument 1 : scal[ ]\nDescription : Renvoie la plus petite valeur contenue dans le tableau passé en paramètre."
			},
			{
				"SubTitle": "Scal_Size_BoolTab",
				"Content": "Retour : scal\nSymbole : SsizeB[ ]\nArgument 1 : bool[ ]\nDescription : Renvoie la taille du tableau de booleens passé en argument."
			},
			{
				"SubTitle": "Scal_Size_ColorTab",
				"Content": "Retour : scal\nSymbole : SsizeC[ ]\nArgument 1 : color[ ]\nDescription : Renvoie la taille du tableau de couleurs passé en argument."
			},
			{
				"SubTitle": "Scal_Size_RefTab",
				"Content": "Retour : scal\nSymbole : SsizeR[ ]\nArgument 1 : ref[ ]\nDescription : Renvoie la taille du tableau de références passé en argument."
			},
			{
				"SubTitle": "Scal_Size_ScalTab",
				"Content": "Retour : scal\nSymbole : SsizeS[ ]\nArgument 1 : scal[ ]\nDescription : Renvoie la taille du tableau de scalaires passé en argument."
			},
			{
				"SubTitle": "Scal_Size_TxtTab",
				"Content": "Retour : scal\nSymbole : SsizeT[ ]\nArgument 1 : txt[ ]\nDescription : Renvoie la taille du tableau de textes passé en argument."
			},
			{
				"SubTitle": "Scal_Size_VecTab",
				"Content": "Retour : scal\nSymbole : SsizeV[ ]\nArgument 1 : vec[ ]\nDescription : Renvoie la taille du tableau de vecteurs passé en argument."
			}
		],
		"Image": "",
		"Video": ""
	},
	{
		"ID": 10,
		"Title": "Inverseurs",
		"Content": [{
				"SubTitle": "Description",
				"Content": "Les inverseurs prennent un tableau en argument et modifient l’ordre de ses éléments : le premier élément devient le dernier, et vice-versa."
			},
			{
				"SubTitle": "VecTab_Reverse_VecTab",
				"Content": "Retour : vec[ ]\nSymbole : V[ ]reverseV[ ]\nArgument 1 : vec[ ]\nDescription : Inverse la liste de vecteurs passée en argument."
			}
		],
		"Image": "",
		"Video": ""
	}

]