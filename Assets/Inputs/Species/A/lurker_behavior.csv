States,Name,Type
0,INIT,Init
1,enemy found,Inter
2,go to search,trigger{goto}
3,go to elsewhere,trigger{goto}
4,go to enemy,trigger{goto}
5,trace enemy,trigger{trace}
,,
Transitions,Start State,End State
0,INIT,enemy found
1,INIT,go to search
2,enemy found,trace enemy
3,INIT,go to elsewhere
4,enemy found,go to enemy
,,
Syntax Tree,Output,
0,0,
Nodes,Type,Output (Node -> Input)
0,operator{B&&BB},
1,operator{B>SS},0->0
2,param{const scal=0},1->1
3,operator{SsizeR[]},1->0
4,param{ref[]:enemies},3->0
5,operator{B>SS},0->1
6,param{const scal=0},5->1
7,operator{SsizeR[]},5->0
8,param{ref[]:traces},7->0
,,
Syntax Tree,Output,
0,1,
Nodes,Type,Output (Node -> Input)
0,operator{B!=VV},
1,operator{VgetRT},0->0
2,operator{VgetRT},0->1
3,param{ref:self},1->0
4,param{const txt=curPos},1->1
5,param{const txt=trgPos},2->1
6,param{ref:self},2->0
,,
Syntax Tree,Output,
0,2,
Nodes,Type,Output (Node -> Input)
0,operator{B<SS},
1,param{const scal=2},0->0
2,operator{SminValS[]},0->1
3,operator{S[]distV[]V},2->0
4,param{vec:curPos},3->1
5,operator{V[]getR[]T},3->0
6,param{ref[]:enemies},5->0
7,param{const txt=pos},5->1
,,
Syntax Tree,Output,
0,go to search->0,
Nodes,Type,Output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VgetRT},0->0
2,param{ref:self},1->0
3,param{const txt=trgPos},1->1
,,
Syntax Tree,Output,
0,go to elsewhere->0,
Nodes,Type,Output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VrandCircleVS},0->0
2,param{const scal=5},1->1
3,operator{VgetRT},1->0
4,param{ref:self},3->0
5,param{const txt=curPos},3->1
,,
Syntax Tree,Output,
0,go to enemy->0,
Nodes,Type,Output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VgetRT},0->0
2,param{const txt=pos},1->1
3,operator{RgetR[]S},1->0
4,param{ref[]:enemies},3->0
5,operator{SminIdS[]},3->1
6,operator{S[]distV[]V},5->0
7,param{vec:curPos},6->1
8,operator{V[]getR[]T},6->0
9,param{const txt=pos},8->1
10,param{ref[]:enemies},8->0
,,
Syntax Tree,Output,
0,trace enemy->0,
Nodes,Type,Output (Node -> Input)
0,param{const color=blue},
,,
Syntax Tree,Output,
0,trace enemy->1,
Nodes,Type,Output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VgetRT},0->0
2,param{ref:home},1->0
3,param{const txt=pos},1->1