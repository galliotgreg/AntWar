States,Name,Type
0,INIT,Init
1,No is Full,Inter
2,IS FULL,Inter
3,No resource in sight,Inter
4,resource in sight,Inter
5,Goto,trigger{goto}
6,Drop,trigger{drop}
7,Goto Resource,trigger{goto}
8,Pick,trigger{goto}
9,Goto ElseWhere,trigger{goto}
10,Goto search,trigger{goto}
,,
Transitions,Start State,End State
0,INIT,IS FULL
1,INIT,No is Full
2,IS FULL,Goto
3,IS FULL,Drop
4,No is Full,No resource in sight
5,No is Full,resource in sight
6,No resource in sight,Goto ElseWhere
7,No resource in sight,Goto search
8,resource in sight,Pick
9,resource in sight,Goto Resource
,,
Syntax Tree,output,
0,0,
Nodes,Type,output (Node -> Input)
0,operator{B==SS},
1,operator{SgetRT},0->0
2,operator{SgetRT},0->1
3,param{ref:self},1->0
4,param{const txt=capacity},1->1
5,param{ref:self},2->0
6,param{const txt=capacityMax},2->1
,,
Syntax Tree,output,
0,Goto->0,
Nodes,Type,output (Node -> Input)
0,operator{VgetRT},
1,param{ref:home},0->0
2,param{const txt=pos},0->1
,,
Syntax Tree,output,
0,3,
Nodes,Type,output (Node -> Input)
0,operator{B<SS},
1,param{const scal=1},0->1
2,operator{SdistVV},0->0
3,operator{VgetRT},2->0
4,operator{VgetRT},2->1
5,param{ref:self},3->0
6,param{const txt=curPos},3->1
7,param{ref:self},4->0
8,param{const txt=pos},4->1
,,
Syntax Tree,output,
0,7,
Nodes,Type,output (Node -> Input)
0,operator{B!=VV},
1,param{vec:trgPos},0->0
2,operator{VgetRT},0->1
3,param{ref:self},2->0
4,param{const txt=curPos},2->1
,,
Syntax Tree,output,
0,Goto search->0,
Nodes,Type,output (Node -> Input)
0,operator{V[]aggV*},
1,param{vec:trgPos},0->0
,,
Syntax Tree,output,
0,Goto ElseWhere->0,
Nodes,Type,output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VrandCircleVS},0->0
2,operator{VgetRT},1->0
3,param{const scal=5},1->1
4,param{ref:self},2->0
5,param{const txt=curPos},2->1
,,
Syntax Tree,output,
0,5,
Nodes,Type,output (Node -> Input)
0,operator{B>SS},
1,param{const scal=0},0->1
2,operator{SsizeR[]},0->0
3,param{ref[]:res},2->0
,,
Syntax Tree,output,
0,8,
Nodes,Type,output (Node -> Input)
0,operator{B<SS},
1,param{const scal=1},0->1
2,operator{SminValS[]},0->0
3,operator{S[]distV[]V},2->0
4,operator{VgetRT},3->1
5,param{const txt=curPos},4->1
6,param{ref:self},4->0
7,operator{V[]getR[]T},3->0
8,param{const txt=pos},7->1
9,param{ref[]:resources},7->0
,,
Syntax Tree,output,
0,Pick->0,
Nodes,Type,output (Node -> Input)
0,operator{RgetR[]S},
1,param{ref[]:resources},0->0
2,operator{SminIdS[]},0->1
3,operator{S[]distV[]V},2->0
4,operator{VgetRT},3->1
5,param{const txt=curPos},4->1
6,param{ref:self},4->0
7,operator{V[]getR[]T},3->0
8,param{const txt=pos},7->1
9,param{ref[]:resources},7->0
,,
Syntax Tree,output,
0,Goto Resource->0,
Nodes,Type,output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VgetRT},0->0
2,param{const txt=pos},1->1
3,operator{RgetR[]S},1->0
4,param{ref[]:resources},3->0
5,operator{SminIdS[]},3->1
6,operator{S[]distV[]V},5->0
7,operator{VgetRT},6->1
8,param{const txt=curPos},7->1
9,param{ref:self},7->0
10,operator{V[]getR[]T},6->0
11,param{const txt=pos},10->1
12,param{ref[]:resources},10->0
