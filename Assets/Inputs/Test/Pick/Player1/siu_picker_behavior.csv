States,Name,Type
0,INIT,Init
1,back to hive,trigger{goto}
2,resources found,Inter
3,pick resources,trigger{pick}
4,goto resources,trigger{goto}
5,nothing interesting,Inter
6,goto hive,trigger{goto}
,,
Transitions,Start State,End State
0,INIT,back to hive
1,INIT,resources found
2,INIT,nothing interesting
3,resources found,goto resources
4,resources found,pick resources
5,nothing interesting,goto hive
,,
Syntax Tree,output,
0,0,
Nodes,Type,output (Node -> Input)
0,operator{B<SS},
1,operator{SgetRT},0->1
2,param{const txt=nbItemMax},1->1
3,param{ref:self},1->0
4,operator{SgetRT},0->0
5,param{const txt=nbItem},4->1
6,param{ref:self},4->0
,,
Syntax Tree,output,
0,back to hive->0,
Nodes,Type,output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VgetRT},0->0
2,param{const txt=pos},1->1
3,param{ref:hive},1->0
,,
Syntax Tree,output,
0,1,
Nodes,Type,output (Node -> Input)
0,operator{B>SS},
1,param{const scal=0},0->1
2,operator{SsizeR[]},0->0
3,param{ref[]:resources},2->0
,,
Syntax Tree,output,
0,3,
Nodes,Type,output (Node -> Input)
0,operator{B>SS},
1,param{const scal=1},0->1
2,operator{SminValS[]},0->0
3,operator{S[]distV[]V},2->0
4,operator{VgetRT},3->1
5,param{const txt=curPos},4->1
6,param{ref:self},4->0
7,operator{V[]getR[]T},3->0
8,param{const txt=pos},7->1
9,param{ref[]:resources},7->0
,,
Syntax Tree,output,
0,pick resources->0,
Nodes,Type,output (Node -> Input)
0,operator{RgetR[]S},
1,param{ref[]:resources},0->0
2,operator{SminIdS[]},0->1
3,operator{S[]distV[]V},2->0
4,operator{VgetRT},3->1
5,param{const txt=curPos},4->1
6,param{ref:self},4->0
7,operator{V[]getR[]T},3->0
8,param{const txt=pos},7->1
9,param{ref[]:resources},7->0
,,
Syntax Tree,output,
0,goto resources->0,
Nodes,Type,output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VgetRT},0->0
2,param{const txt=pos},1->1
3,operator{RgetR[]S},1->0
4,param{ref[]:resources},3->0
5,operator{SminIdS[]},3->1
6,operator{S[]distV[]V},5->0
7,operator{VgetRT},6->1
8,param{const txt=curPos},7->1
9,param{ref:self},7->0
10,operator{V[]getR[]T},6->0
11,param{const txt=pos},10->1
12,param{ref[]:resources},10->0
,,
Syntax Tree,output,
0,goto hive->0,
Nodes,Type,output (Node -> Input)
0,operator{V[]aggV*},
1,operator{VgetRT},0->0
2,param{const txt=pos},1->1
3,param{ref:hive},1->0